<#@ template debug="true" hostspecific="false" language="C#"
#><#@ output extension=".zaml"
#><#@ Assembly name="System.Core"
#><#@ Assembly Name="System.Xml"
#><#@ Assembly name="Microsoft.SqlServer.ConnectionInfo"
#><#@ Assembly name="Microsoft.SqlServer.Smo"
#><#@ Assembly Name="Microsoft.SqlServer.Management.Sdk.Sfc"
#><#@ import namespace="System.Linq"
#><#@ import namespace="System.Text"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="Microsoft.SqlServer.Management.Smo"
#><#string AppName = "AdventureWorks";
string EntityName = "Person";
string EntityNamePlural = "Persons";
string EntityTableName = "Person";
string ItemTemplateValue = "LastName";
Server server = new Server("Dell7110");
Database database = new Database(server, "AdventureWorks2012");
Table table = new Table(database, "Person", "Person");
table.Refresh();
#><!--
Acknowlegement:
Much of the look and feel and the UI Logic came from: http://blogs.u2u.be/diederik/post/2015/09/08/Using-SQLite-on-the-Universal-Windows-Platform.aspx.
I have not used any of the SqlLite code but the basic controls and logic switches are form the blog.     
-->
<Page x:Name="<#= EntityName #>"
    x:Class="<#= AppName #>.Views.<#= EntityName #>Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:<#= AppName #>.Views"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:behaviors="using:<#= AppName #>.Behaviors"
    xmlns:converters="using:<#= AppName #>.Converters"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    NavigationCacheMode="Enabled"
    RequestedTheme="Light"
    mvvm:ViewModelLocator.AutoWireViewModel="True">

    <Page.Resources>
        <converters:BooleanNegationConverter x:Key="BooleanNegationConverter" />
        <converters:BooleanToVisibilityConverter x:Key="TrueToVisibleConverter" />
        <converters:BooleanToVisibilityConverter x:Key="FalseToVisibleConverter" IsReversed="True" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:StringToDecimalConverter x:Key="StringToDecimalConverter" />
        <converters:FirstErrorConverter x:Key="FirstErrorConverter" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"  Margin="15">
	    <ProgressRing x:Name="progressRing"
                    Visibility="{Binding Loading, Converter={StaticResource TrueToVisibleConverter}, Mode=TwoWay}"
                    IsActive="{Binding Loading, Mode=TwoWay}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="Black"
                    Height="100"
                    Width="100" />

        <Border Visibility="{Binding Loading, Converter={StaticResource FalseToVisibleConverter}, Mode=TwoWay}">
            <Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>

				<!-- Add Button -->
				<StackPanel Grid.Row="0"
							Grid.Column="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right">
					<AppBarButton Command="{Binding AddCommand}"
								  Icon="Add"
								  Label="Add" />
				</StackPanel>

				<!-- <#= EntityName #> ListView -->
				<Border Grid.Row="1" 
							Grid.Column="0">
					<ListView Margin="0,15,0,0"
							  IsItemClickEnabled="True"
							  SelectionMode="Single"
							  ItemsSource="{Binding <#= EntityName #>VMs}" 
							  SelectedItem="{Binding Selected<#= EntityName #>VM, Mode=TwoWay}">
						<interactivity:Interaction.Behaviors>
							<core:EventTriggerBehavior EventName="SelectionChanged">
								<core:InvokeCommandAction Command="{Binding <#= EntityNamePlural #>ListViewSelectionChangedCommand}" />
							</core:EventTriggerBehavior>
						</interactivity:Interaction.Behaviors>
						<ListView.ItemTemplate>
							<DataTemplate>
								<StackPanel Margin="6">
									<TextBlock Text="{Binding <#= ItemTemplateValue #>}" />
								</StackPanel>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</Border>

            </Grid>            
        </Border>
    </Grid>
</Page>